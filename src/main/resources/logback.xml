<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <!--定义日志文件的存储地址 -->
  <property name="LOG_HOME" value="./qbcsLog" />
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/TestWeb.%d{yyyy-MM-dd-HH-mm}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
     <!-- info -->
     <!-- Info -->
    <appender name="info1" class="ch.qos.logback.core.rolling.RollingFileAppender">
       <!--  <appender>true</appender> -->
      <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <!-- 每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <!-- 日志文件保留15天 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{20}:%file\(%line\) | %msg%n</pattern>
        </encoder>
    </appender>
    <!--debug  -->
    <appender name="debug1" class="ch.qos.logback.core.rolling.RollingFileAppender">
      <!-- <appender>true</appender> -->

      <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
           <!--  <onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>  -->
        </filter>
        <!-- 每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/debug.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <!-- 日志文件保留15天 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 格式化输出 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} | %thread | %-5level | %class{20}:%file\(%line\) | %msg%n</pattern>
        </encoder>
    </appender>
 <!--    <appender name="info_async" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>3000</discardingThreshold>
        <queueSize>10000</queueSize>
        <appender-ref ref="info" />
    </appender> -->


    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
   
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="info1" />
        <appender-ref ref="debug1" />
    </root>

    <!-- 开发环境时激活 -->
<!--  <springProfile name="prod">
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="info" />
        <appender-ref ref="debug" />
    </root>
</springProfile> -->

    <!-- 开发，测试的时候激活-->
<!-- <springProfile name="prod,test">
     <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="info" />
        <appender-ref ref="debug" />
    </root>
</springProfile> -->

    <!-- 当 "生产" 环境时，该配置不激活-->
<!-- <springProfile name="!prod">
     <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
        <appender-ref ref="info" />
        <appender-ref ref="debug" />
    </root>
</springProfile> -->

</configuration>
